name: CI/CD

on:
  push:
    branches:
      - master
  release:
    types: [published]
  pull_request: {}
  workflow_dispatch: {}

jobs:

  test:
    name: Test
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        os: ['ubuntu-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: pip install --use-pep517 -r requirements-test.txt .

      - name: Test
        run: pytest

  release-linux:
    name: Release Linux
    runs-on: 'ubuntu-latest'

    if: github.ref == 'refs/heads/master' || github.event_name == 'release'

    needs:
      - test

    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: pip install -r requirements-build.txt

      - name: Build
        run: |
          python setup.py sdist

      - name: Build manylinux
        uses: RalfG/python-wheels-manylinux-build@v0.5.0
        with:
          python-versions: |
            cp37-cp37m
            cp38-cp38
            cp39-cp39
            cp310-cp310
            cp311-cp311
          build-requirements: 'cffi'

      - name: Check wheels
        run: twine check dist/*

      - name: Upload package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        #if: github.event_name == 'release'
        run: |
          twine upload dist/*-manylinux*.whl dist/*.tar.gz

  release-macos:
    name: Release MacOS
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: 'macos-latest'

    if: github.ref == 'refs/heads/master' || github.event_name == 'release'

    needs:
      - test

    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements-test.txt

      - name: Install dependencies
        run: pip install -r requirements-build.txt

      - name: Build
        run: |
          python setup.py bdist_wheel
          twine check dist/*

      - name: Upload package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        if: github.event_name == 'release'
        run: twine upload dist/*.whl
